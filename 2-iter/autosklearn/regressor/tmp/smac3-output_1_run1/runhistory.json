{"configs": {"1": {"regressor:random_forest:bootstrap": "True", "regressor:random_forest:min_samples_split": 2, "regressor:random_forest:max_features": 1.0, "imputation:strategy": "mean", "regressor:random_forest:min_samples_leaf": 1, "one_hot_encoding:minimum_fraction": 0.01, "regressor:random_forest:n_estimators": 100, "regressor:random_forest:max_leaf_nodes": "None", "preprocessor:__choice__": "no_preprocessing", "regressor:__choice__": "random_forest", "regressor:random_forest:max_depth": "None", "one_hot_encoding:use_minimum_fraction": "True", "regressor:random_forest:criterion": "mse", "rescaling:__choice__": "standardize", "regressor:random_forest:min_weight_fraction_leaf": 0.0}, "2": {"regressor:liblinear_svr:tol": 0.013073697742541987, "imputation:strategy": "median", "one_hot_encoding:minimum_fraction": 0.0010957033772958302, "preprocessor:pca:keep_variance": 0.6483340494344962, "regressor:liblinear_svr:C": 2412.0536249507086, "regressor:liblinear_svr:epsilon": 0.3599323499113734, "regressor:liblinear_svr:loss": "squared_epsilon_insensitive", "preprocessor:__choice__": "pca", "regressor:__choice__": "liblinear_svr", "one_hot_encoding:use_minimum_fraction": "True", "regressor:liblinear_svr:intercept_scaling": 1, "rescaling:__choice__": "none", "preprocessor:pca:whiten": "False", "regressor:liblinear_svr:dual": "False", "regressor:liblinear_svr:fit_intercept": "True"}, "3": {"regressor:extra_trees:min_samples_leaf": 11, "imputation:strategy": "most_frequent", "regressor:extra_trees:min_samples_split": 14, "regressor:extra_trees:max_features": 2.505621648804448, "regressor:extra_trees:max_depth": "None", "preprocessor:random_trees_embedding:n_estimators": 79, "preprocessor:random_trees_embedding:min_weight_fraction_leaf": 1.0, "preprocessor:__choice__": "random_trees_embedding", "regressor:__choice__": "extra_trees", "preprocessor:random_trees_embedding:min_samples_split": 20, "one_hot_encoding:use_minimum_fraction": "False", "preprocessor:random_trees_embedding:max_leaf_nodes": "None", "regressor:extra_trees:bootstrap": "True", "rescaling:__choice__": "normalize", "preprocessor:random_trees_embedding:min_samples_leaf": 16, "preprocessor:random_trees_embedding:max_depth": 4, "regressor:extra_trees:n_estimators": 100, "regressor:extra_trees:criterion": "mse"}, "4": {"preprocessor:random_trees_embedding:n_estimators": 59, "one_hot_encoding:minimum_fraction": 0.12280259225459919, "regressor:sgd:loss": "squared_loss", "regressor:sgd:fit_intercept": "True", "regressor:sgd:n_iter": 422, "regressor:sgd:alpha": 0.000115314865425957, "regressor:sgd:penalty": "elasticnet", "regressor:sgd:l1_ratio": 4.126728151446863e-08, "regressor:__choice__": "sgd", "preprocessor:random_trees_embedding:min_samples_split": 5, "preprocessor:random_trees_embedding:max_leaf_nodes": "None", "rescaling:__choice__": "normalize", "preprocessor:random_trees_embedding:min_samples_leaf": 14, "preprocessor:random_trees_embedding:max_depth": 8, "regressor:sgd:power_t": 0.977042950329812, "imputation:strategy": "most_frequent", "regressor:sgd:learning_rate": "invscaling", "regressor:sgd:average": "True", "preprocessor:random_trees_embedding:min_weight_fraction_leaf": 1.0, "preprocessor:__choice__": "random_trees_embedding", "one_hot_encoding:use_minimum_fraction": "True", "regressor:sgd:eta0": 0.03414206524598757}, "5": {"regressor:adaboost:max_depth": 1, "regressor:adaboost:learning_rate": 0.027237480938918146, "regressor:adaboost:loss": "exponential", "imputation:strategy": "median", "one_hot_encoding:minimum_fraction": 0.00010413369549990089, "preprocessor:select_percentile_regression:score_func": "f_regression", "preprocessor:select_percentile_regression:percentile": 84.72171722821042, "preprocessor:__choice__": "select_percentile_regression", "regressor:__choice__": "adaboost", "one_hot_encoding:use_minimum_fraction": "True", "rescaling:__choice__": "standardize", "regressor:adaboost:n_estimators": 77}, "6": {"regressor:gradient_boosting:max_leaf_nodes": "None", "regressor:gradient_boosting:min_samples_split": 15, "regressor:gradient_boosting:max_depth": 9, "imputation:strategy": "mean", "regressor:gradient_boosting:min_samples_leaf": 15, "regressor:gradient_boosting:loss": "ls", "one_hot_encoding:minimum_fraction": 0.005824671588708171, "preprocessor:select_percentile_regression:score_func": "f_regression", "regressor:gradient_boosting:n_estimators": 434, "regressor:gradient_boosting:max_features": 3.009759475309597, "preprocessor:select_percentile_regression:percentile": 41.65612254443172, "preprocessor:__choice__": "select_percentile_regression", "regressor:__choice__": "gradient_boosting", "one_hot_encoding:use_minimum_fraction": "True", "rescaling:__choice__": "minmax", "regressor:gradient_boosting:min_weight_fraction_leaf": 0.0, "regressor:gradient_boosting:learning_rate": 0.11455862914226383, "regressor:gradient_boosting:subsample": 0.9986331030523413}, "7": {"regressor:random_forest:bootstrap": "True", "regressor:random_forest:min_samples_split": 17, "regressor:random_forest:max_features": 3.670434847898357, "imputation:strategy": "mean", "regressor:random_forest:min_samples_leaf": 14, "preprocessor:polynomial:degree": 2, "regressor:random_forest:n_estimators": 100, "regressor:random_forest:max_leaf_nodes": "None", "preprocessor:__choice__": "polynomial", "preprocessor:polynomial:include_bias": "True", "regressor:__choice__": "random_forest", "regressor:random_forest:max_depth": "None", "one_hot_encoding:use_minimum_fraction": "False", "preprocessor:polynomial:interaction_only": "True", "regressor:random_forest:criterion": "mse", "rescaling:__choice__": "minmax", "regressor:random_forest:min_weight_fraction_leaf": 0.0}, "8": {"regressor:ard_regression:lambda_1": 6.537967036898468e-07, "regressor:ard_regression:threshold_lambda": 22952.664115904976, "imputation:strategy": "most_frequent", "preprocessor:nystroem_sampler:gamma": 0.02858226177213595, "regressor:ard_regression:alpha_2": 5.79438340595463e-09, "regressor:ard_regression:alpha_1": 6.715494474667645e-05, "preprocessor:nystroem_sampler:coef0": -0.5051943261429319, "one_hot_encoding:minimum_fraction": 0.005787317176464259, "regressor:ard_regression:lambda_2": 1.18034732109825e-09, "preprocessor:nystroem_sampler:n_components": 88, "preprocessor:__choice__": "nystroem_sampler", "regressor:ard_regression:n_iter": 300, "regressor:__choice__": "ard_regression", "preprocessor:nystroem_sampler:kernel": "sigmoid", "rescaling:__choice__": "standardize", "regressor:ard_regression:tol": 0.0008393884934957268, "regressor:ard_regression:fit_intercept": "True", "one_hot_encoding:use_minimum_fraction": "True"}, "9": {"regressor:sgd:power_t": 0.173881759825956, "regressor:sgd:penalty": "l2", "imputation:strategy": "most_frequent", "regressor:sgd:eta0": 0.07153091401382519, "regressor:sgd:average": "True", "preprocessor:pca:keep_variance": 0.7090611243904714, "regressor:sgd:fit_intercept": "True", "regressor:sgd:n_iter": 116, "one_hot_encoding:minimum_fraction": 0.13908940772991638, "regressor:sgd:learning_rate": "invscaling", "regressor:sgd:alpha": 1.0167700428469938e-05, "preprocessor:__choice__": "pca", "regressor:__choice__": "sgd", "one_hot_encoding:use_minimum_fraction": "True", "regressor:sgd:loss": "epsilon_insensitive", "rescaling:__choice__": "standardize", "preprocessor:pca:whiten": "False", "regressor:sgd:epsilon": 0.00029617259012161724}, "10": {"preprocessor:kernel_pca:degree": 3, "regressor:libsvm_svr:max_iter": -1, "regressor:libsvm_svr:epsilon": 0.16174114279385154, "imputation:strategy": "mean", "one_hot_encoding:minimum_fraction": 0.0006680346397482739, "preprocessor:kernel_pca:gamma": 0.00017967335139193778, "one_hot_encoding:use_minimum_fraction": "True", "regressor:libsvm_svr:shrinking": "True", "preprocessor:kernel_pca:n_components": 1663, "preprocessor:__choice__": "kernel_pca", "regressor:__choice__": "libsvm_svr", "regressor:libsvm_svr:C": 8.698434463974493, "regressor:libsvm_svr:kernel": "linear", "rescaling:__choice__": "none", "regressor:libsvm_svr:tol": 5.3595100850296956e-05, "preprocessor:kernel_pca:coef0": -0.11274823045956661, "preprocessor:kernel_pca:kernel": "poly"}, "11": {"preprocessor:fast_ica:whiten": "True", "regressor:decision_tree:min_samples_split": 17, "regressor:decision_tree:max_features": 1.0, "imputation:strategy": "median", "regressor:decision_tree:max_leaf_nodes": "None", "regressor:decision_tree:min_samples_leaf": 17, "one_hot_encoding:minimum_fraction": 0.0013468209789225059, "preprocessor:fast_ica:fun": "cube", "regressor:decision_tree:min_weight_fraction_leaf": 0.0, "preprocessor:fast_ica:n_components": 1671, "regressor:decision_tree:criterion": "mse", "preprocessor:__choice__": "fast_ica", "regressor:__choice__": "decision_tree", "one_hot_encoding:use_minimum_fraction": "True", "regressor:decision_tree:splitter": "best", "preprocessor:fast_ica:algorithm": "parallel", "rescaling:__choice__": "none", "regressor:decision_tree:max_depth": 0.7318793956544556}, "12": {"regressor:liblinear_svr:tol": 0.0031417133316643106, "imputation:strategy": "most_frequent", "one_hot_encoding:minimum_fraction": 0.0005333923893044509, "preprocessor:select_percentile_regression:score_func": "f_regression", "regressor:liblinear_svr:C": 40.51103683059891, "regressor:liblinear_svr:epsilon": 0.007753954432147511, "regressor:liblinear_svr:loss": "squared_epsilon_insensitive", "preprocessor:select_percentile_regression:percentile": 71.12577083598303, "preprocessor:__choice__": "select_percentile_regression", "regressor:__choice__": "liblinear_svr", "one_hot_encoding:use_minimum_fraction": "True", "rescaling:__choice__": "none", "regressor:liblinear_svr:dual": "False", "regressor:liblinear_svr:intercept_scaling": 1, "regressor:liblinear_svr:fit_intercept": "True"}, "13": {"regressor:libsvm_svr:max_iter": -1, "regressor:libsvm_svr:epsilon": 0.006161450010320691, "imputation:strategy": "most_frequent", "regressor:libsvm_svr:tol": 0.05197949798007153, "preprocessor:feature_agglomeration:affinity": "cosine", "regressor:libsvm_svr:shrinking": "True", "preprocessor:feature_agglomeration:linkage": "average", "preprocessor:__choice__": "feature_agglomeration", "regressor:__choice__": "libsvm_svr", "regressor:libsvm_svr:C": 12.447751893230699, "one_hot_encoding:use_minimum_fraction": "False", "regressor:libsvm_svr:coef0": -0.08908727355695212, "rescaling:__choice__": "minmax", "preprocessor:feature_agglomeration:pooling_func": "median", "regressor:libsvm_svr:degree": 3, "preprocessor:feature_agglomeration:n_clusters": 224, "regressor:libsvm_svr:kernel": "sigmoid"}, "14": {"preprocessor:select_percentile_regression:percentile": 43.871568592817404, "preprocessor:__choice__": "select_percentile_regression", "regressor:__choice__": "ridge_regression", "imputation:strategy": "median", "regressor:ridge_regression:tol": 0.0005475467486334477, "one_hot_encoding:minimum_fraction": 0.0029879778388353924, "rescaling:__choice__": "normalize", "regressor:ridge_regression:alpha": 0.8908088250714176, "preprocessor:select_percentile_regression:score_func": "f_regression", "regressor:ridge_regression:fit_intercept": "True", "one_hot_encoding:use_minimum_fraction": "True"}, "15": {"regressor:libsvm_svr:max_iter": -1, "regressor:libsvm_svr:epsilon": 0.34759659502964757, "imputation:strategy": "mean", "one_hot_encoding:minimum_fraction": 0.024471831430978874, "regressor:libsvm_svr:degree": 2, "preprocessor:random_trees_embedding:n_estimators": 67, "regressor:libsvm_svr:shrinking": "True", "preprocessor:random_trees_embedding:min_weight_fraction_leaf": 1.0, "regressor:libsvm_svr:tol": 1.0792328858048423e-05, "regressor:libsvm_svr:gamma": 0.0006653865431671441, "preprocessor:__choice__": "random_trees_embedding", "regressor:__choice__": "libsvm_svr", "preprocessor:random_trees_embedding:min_samples_split": 9, "one_hot_encoding:use_minimum_fraction": "True", "regressor:libsvm_svr:coef0": 0.7897939422607148, "preprocessor:random_trees_embedding:max_leaf_nodes": "None", "regressor:libsvm_svr:C": 0.2350467762304017, "rescaling:__choice__": "normalize", "preprocessor:random_trees_embedding:min_samples_leaf": 10, "preprocessor:random_trees_embedding:max_depth": 10, "regressor:libsvm_svr:kernel": "poly"}, "16": {"preprocessor:select_percentile_regression:percentile": 23.898172197675468, "preprocessor:__choice__": "select_percentile_regression", "regressor:__choice__": "adaboost", "regressor:adaboost:loss": "exponential", "imputation:strategy": "median", "regressor:adaboost:max_depth": 6, "rescaling:__choice__": "standardize", "regressor:adaboost:n_estimators": 436, "preprocessor:select_percentile_regression:score_func": "f_regression", "regressor:adaboost:learning_rate": 0.5731006021234075, "one_hot_encoding:use_minimum_fraction": "False"}}, "data": [[[1, "{\"task_id\": \"numerai\"}", 0], [1.0, 341.5424749851227, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[2, "{\"task_id\": \"numerai\"}", 0], [0.9989580636655356, 24.1625235080719, {"__enum__": "StatusType.SUCCESS"}, {"num_run": 3, "duration": 24.111541032791138}]], [[3, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.0164408683777, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/regression.py\", line 83, in fit_transformer\n    X, Y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[4, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.0140359401703, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/regression.py\", line 83, in fit_transformer\n    X, Y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[5, "{\"task_id\": \"numerai\"}", 0], [0.999223436490973, 23.478402853012085, {"__enum__": "StatusType.SUCCESS"}, {"num_run": 6, "duration": 23.42746067047119}]], [[6, "{\"task_id\": \"numerai\"}", 0], [1.0, 360.1062812805176, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]], [[7, "{\"task_id\": \"numerai\"}", 0], [1.0, 1.1729938983917236, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[8, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.01401114463806, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/regression.py\", line 83, in fit_transformer\n    X, Y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[9, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.01324486732483, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/regression.py\", line 83, in fit_transformer\n    X, Y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 437, in mode\n    template = (a == score)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[10, "{\"task_id\": \"numerai\"}", 0], [1.0, 1.0357468128204346, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[11, "{\"task_id\": \"numerai\"}", 0], [1.0, 360.10315561294556, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]], [[12, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.013507604599, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/regression.py\", line 83, in fit_transformer\n    X, Y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 437, in mode\n    template = (a == score)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[13, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.0135591030121, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/regression.py\", line 83, in fit_transformer\n    X, Y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 437, in mode\n    template = (a == score)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[14, "{\"task_id\": \"numerai\"}", 0], [0.9976864853481299, 16.455485582351685, {"__enum__": "StatusType.SUCCESS"}, {"num_run": 15, "duration": 16.40651535987854}]], [[15, "{\"task_id\": \"numerai\"}", 0], [1.0, 5.740225315093994, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[16, "{\"task_id\": \"numerai\"}", 0], [1.0, 269.09735107421875, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]]]}