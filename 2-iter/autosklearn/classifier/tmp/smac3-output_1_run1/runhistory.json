{"data": [[[1, "{\"task_id\": \"numerai\"}", 0], [1.0, 292.1898477077484, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[2, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.0194525718689, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/classification.py\", line 102, in fit_transformer\n    X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[3, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.01455330848694, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/classification.py\", line 102, in fit_transformer\n    X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[4, "{\"task_id\": \"numerai\"}", 0], [1.0, 1.106123924255371, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[5, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.0145025253296, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/classification.py\", line 102, in fit_transformer\n    X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[6, "{\"task_id\": \"numerai\"}", 0], [1.0, 360.019211769104, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]], [[7, "{\"task_id\": \"numerai\"}", 0], [1.0, 184.32246804237366, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[8, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 239.02156972885132, {"__enum__": "StatusType.CRASHED"}, {"error": "Result queue is empty"}]], [[9, "{\"task_id\": \"numerai\"}", 0], [1.0, 111.88183951377869, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[10, "{\"task_id\": \"numerai\"}", 0], [2147483647.0, 360.017498254776, {"__enum__": "StatusType.CRASHED"}, {"error": "TimeoutException()", "traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/__init__.py\", line 28, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 404, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 93, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/train_evaluator.py\", line 236, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/evaluation/abstract_evaluator.py\", line 350, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 88, in fit\n    X, fit_params = self.fit_transformer(X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/classification.py\", line 102, in fit_transformer\n    X, y, fit_params=fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/base.py\", line 98, in fit_transformer\n    X, fit_params = self._fit(X, y, **fit_params)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 236, in _fit\n    Xt = transform.fit(Xt, y, **fit_params_steps[name]) \\\n  File \"/usr/local/lib/python3.5/dist-packages/autosklearn/pipeline/components/data_preprocessing/imputation/imputation.py\", line 18, in fit\n    self.preprocessor = self.preprocessor.fit(X)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 167, in fit\n    self.axis)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 298, in _dense_fit\n    most_frequent[i] = _most_frequent(row, np.nan, 0)\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/imputation.py\", line 42, in _most_frequent\n    mode = stats.mode(array)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/scipy/stats/stats.py\", line 438, in mode\n    counts = np.expand_dims(np.sum(template, axis), axis)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/fromnumeric.py\", line 1834, in sum\n    out=out, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/numpy/core/_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\n  File \"/usr/local/lib/python3.5/dist-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n"}]], [[11, "{\"task_id\": \"numerai\"}", 0], [1.0, 360.10760831832886, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]], [[12, "{\"task_id\": \"numerai\"}", 0], [1.7424150793662034, 16.225919246673584, {"__enum__": "StatusType.SUCCESS"}, {"duration": 16.17357611656189, "num_run": 13}]], [[13, "{\"task_id\": \"numerai\"}", 0], [1.0, 8.99524211883545, {"__enum__": "StatusType.MEMOUT"}, {"error": "Memout (used more than 3072 MB)."}]], [[14, "{\"task_id\": \"numerai\"}", 0], [1.0, 360.09828901290894, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]], [[15, "{\"task_id\": \"numerai\"}", 0], [1.0, 196.07401871681213, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout"}]]], "configs": {"1": {"rescaling:__choice__": "standardize", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "no_preprocessing", "balancing:strategy": "none", "classifier:random_forest:bootstrap": "True", "one_hot_encoding:minimum_fraction": 0.01, "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 1.0, "classifier:random_forest:min_samples_leaf": 1, "imputation:strategy": "mean", "classifier:random_forest:max_leaf_nodes": "None", "one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:criterion": "gini", "classifier:random_forest:min_samples_split": 2, "classifier:__choice__": "random_forest", "classifier:random_forest:min_weight_fraction_leaf": 0.0}, "2": {"rescaling:__choice__": "standardize", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "no_preprocessing", "balancing:strategy": "none", "classifier:random_forest:bootstrap": "True", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 2.691410068212463, "classifier:random_forest:min_samples_leaf": 6, "imputation:strategy": "most_frequent", "classifier:random_forest:max_leaf_nodes": "None", "one_hot_encoding:use_minimum_fraction": "False", "classifier:random_forest:criterion": "gini", "classifier:random_forest:min_samples_split": 15, "classifier:__choice__": "random_forest", "classifier:random_forest:min_weight_fraction_leaf": 0.0}, "3": {"rescaling:__choice__": "standardize", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "polynomial", "balancing:strategy": "none", "classifier:random_forest:bootstrap": "True", "one_hot_encoding:minimum_fraction": 0.00779561565738919, "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 1.675620724347966, "classifier:random_forest:min_samples_leaf": 6, "imputation:strategy": "most_frequent", "preprocessor:polynomial:interaction_only": "True", "classifier:random_forest:max_leaf_nodes": "None", "one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:criterion": "entropy", "classifier:random_forest:min_samples_split": 15, "preprocessor:polynomial:degree": 3, "classifier:__choice__": "random_forest", "classifier:random_forest:min_weight_fraction_leaf": 0.0, "preprocessor:polynomial:include_bias": "True"}, "4": {"classifier:sgd:penalty": "l2", "rescaling:__choice__": "none", "classifier:sgd:alpha": 4.924097956321882e-06, "preprocessor:__choice__": "kitchen_sinks", "preprocessor:kitchen_sinks:gamma": 0.9005631277685047, "balancing:strategy": "none", "classifier:sgd:loss": "log", "classifier:sgd:learning_rate": "optimal", "preprocessor:kitchen_sinks:n_components": 7910, "one_hot_encoding:minimum_fraction": 0.010000000000000004, "imputation:strategy": "mean", "classifier:sgd:fit_intercept": "True", "one_hot_encoding:use_minimum_fraction": "True", "classifier:sgd:eta0": 0.01, "classifier:__choice__": "sgd", "classifier:sgd:average": "False", "classifier:sgd:n_iter": 20}, "5": {"rescaling:__choice__": "normalize", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "no_preprocessing", "balancing:strategy": "none", "classifier:random_forest:bootstrap": "False", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 0.7561836874034692, "classifier:random_forest:min_samples_leaf": 1, "imputation:strategy": "most_frequent", "classifier:random_forest:max_leaf_nodes": "None", "one_hot_encoding:use_minimum_fraction": "False", "classifier:random_forest:criterion": "entropy", "classifier:random_forest:min_samples_split": 10, "classifier:__choice__": "random_forest", "classifier:random_forest:min_weight_fraction_leaf": 0.0}, "6": {"classifier:extra_trees:n_estimators": 100, "rescaling:__choice__": "normalize", "one_hot_encoding:minimum_fraction": 0.010574522915023539, "classifier:extra_trees:max_depth": "None", "classifier:extra_trees:bootstrap": "False", "balancing:strategy": "none", "classifier:extra_trees:min_samples_split": 18, "classifier:extra_trees:criterion": "entropy", "preprocessor:feature_agglomeration:pooling_func": "mean", "imputation:strategy": "mean", "preprocessor:feature_agglomeration:n_clusters": 219, "classifier:extra_trees:min_samples_leaf": 11, "one_hot_encoding:use_minimum_fraction": "True", "preprocessor:__choice__": "feature_agglomeration", "classifier:extra_trees:min_weight_fraction_leaf": 0.0, "preprocessor:feature_agglomeration:linkage": "average", "classifier:__choice__": "extra_trees", "classifier:extra_trees:max_features": 3.9379397352291163, "preprocessor:feature_agglomeration:affinity": "cosine"}, "7": {"classifier:extra_trees:n_estimators": 100, "rescaling:__choice__": "standardize", "one_hot_encoding:minimum_fraction": 0.0006382162690755656, "classifier:extra_trees:max_depth": "None", "classifier:extra_trees:bootstrap": "False", "balancing:strategy": "none", "classifier:extra_trees:min_samples_split": 4, "classifier:extra_trees:criterion": "gini", "imputation:strategy": "mean", "classifier:extra_trees:min_samples_leaf": 1, "one_hot_encoding:use_minimum_fraction": "True", "preprocessor:__choice__": "no_preprocessing", "classifier:extra_trees:min_weight_fraction_leaf": 0.0, "classifier:__choice__": "extra_trees", "classifier:extra_trees:max_features": 4.557771492985571}, "8": {"rescaling:__choice__": "none", "preprocessor:__choice__": "no_preprocessing", "balancing:strategy": "weighting", "classifier:libsvm_svc:kernel": "rbf", "classifier:libsvm_svc:C": 16725.85790752666, "imputation:strategy": "median", "classifier:libsvm_svc:tol": 0.08183987642157002, "one_hot_encoding:use_minimum_fraction": "False", "classifier:libsvm_svc:gamma": 0.008590925713214136, "classifier:__choice__": "libsvm_svc", "classifier:libsvm_svc:shrinking": "True", "classifier:libsvm_svc:max_iter": -1}, "9": {"one_hot_encoding:minimum_fraction": 0.010000000000000004, "preprocessor:extra_trees_preproc_for_classification:min_samples_split": 7, "preprocessor:extra_trees_preproc_for_classification:criterion": "gini", "classifier:random_forest:min_samples_leaf": 6, "imputation:strategy": "mean", "classifier:__choice__": "random_forest", "classifier:random_forest:max_features": 2.7636645304738576, "classifier:random_forest:criterion": "entropy", "classifier:random_forest:min_samples_split": 15, "preprocessor:extra_trees_preproc_for_classification:min_samples_leaf": 1, "classifier:random_forest:min_weight_fraction_leaf": 0.0, "rescaling:__choice__": "none", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "extra_trees_preproc_for_classification", "classifier:random_forest:bootstrap": "True", "balancing:strategy": "none", "preprocessor:extra_trees_preproc_for_classification:n_estimators": 100, "classifier:random_forest:max_depth": "None", "one_hot_encoding:use_minimum_fraction": "True", "preprocessor:extra_trees_preproc_for_classification:min_weight_fraction_leaf": 0.0, "classifier:random_forest:max_leaf_nodes": "None", "preprocessor:extra_trees_preproc_for_classification:bootstrap": "False", "preprocessor:extra_trees_preproc_for_classification:max_features": 1.5263343865128356, "preprocessor:extra_trees_preproc_for_classification:max_depth": "None"}, "10": {"classifier:libsvm_svc:kernel": "poly", "one_hot_encoding:minimum_fraction": 0.12342934122356486, "preprocessor:liblinear_svc_preprocessor:C": 1.0, "preprocessor:liblinear_svc_preprocessor:loss": "squared_hinge", "preprocessor:liblinear_svc_preprocessor:intercept_scaling": 1, "classifier:libsvm_svc:coef0": 0.193222519885502, "imputation:strategy": "most_frequent", "classifier:libsvm_svc:degree": 3, "classifier:libsvm_svc:gamma": 1.8755074516105807, "preprocessor:liblinear_svc_preprocessor:penalty": "l1", "preprocessor:liblinear_svc_preprocessor:tol": 0.00010000000000000009, "preprocessor:liblinear_svc_preprocessor:dual": "False", "rescaling:__choice__": "minmax", "preprocessor:__choice__": "liblinear_svc_preprocessor", "preprocessor:liblinear_svc_preprocessor:multi_class": "ovr", "balancing:strategy": "none", "classifier:libsvm_svc:C": 2125.7097093031207, "one_hot_encoding:use_minimum_fraction": "True", "classifier:libsvm_svc:tol": 0.011175266227261777, "preprocessor:liblinear_svc_preprocessor:fit_intercept": "True", "classifier:__choice__": "libsvm_svc", "classifier:libsvm_svc:shrinking": "True", "classifier:libsvm_svc:max_iter": -1}, "11": {"rescaling:__choice__": "standardize", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "no_preprocessing", "balancing:strategy": "none", "classifier:random_forest:bootstrap": "True", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 2.2584064375821877, "classifier:random_forest:min_samples_leaf": 13, "imputation:strategy": "mean", "classifier:random_forest:max_leaf_nodes": "None", "one_hot_encoding:use_minimum_fraction": "False", "classifier:random_forest:criterion": "entropy", "classifier:random_forest:min_samples_split": 6, "classifier:__choice__": "random_forest", "classifier:random_forest:min_weight_fraction_leaf": 0.0}, "12": {"preprocessor:feature_agglomeration:n_clusters": 298, "rescaling:__choice__": "standardize", "one_hot_encoding:use_minimum_fraction": "False", "preprocessor:__choice__": "feature_agglomeration", "balancing:strategy": "none", "preprocessor:feature_agglomeration:pooling_func": "max", "classifier:__choice__": "gaussian_nb", "preprocessor:feature_agglomeration:linkage": "complete", "preprocessor:feature_agglomeration:affinity": "manhattan", "imputation:strategy": "mean"}, "13": {"classifier:sgd:penalty": "l1", "rescaling:__choice__": "standardize", "classifier:sgd:alpha": 0.08307741263309468, "preprocessor:__choice__": "random_trees_embedding", "balancing:strategy": "weighting", "classifier:sgd:loss": "squared_hinge", "classifier:sgd:learning_rate": "constant", "preprocessor:random_trees_embedding:n_estimators": 100, "preprocessor:random_trees_embedding:min_samples_leaf": 3, "one_hot_encoding:minimum_fraction": 0.010000000000000004, "imputation:strategy": "mean", "classifier:sgd:fit_intercept": "True", "one_hot_encoding:use_minimum_fraction": "True", "preprocessor:random_trees_embedding:max_depth": 5, "classifier:sgd:eta0": 0.06824350233113559, "preprocessor:random_trees_embedding:max_leaf_nodes": "None", "classifier:__choice__": "sgd", "preprocessor:random_trees_embedding:min_samples_split": 2, "classifier:sgd:average": "True", "preprocessor:random_trees_embedding:min_weight_fraction_leaf": 1.0, "classifier:sgd:n_iter": 16}, "14": {"classifier:extra_trees:n_estimators": 100, "rescaling:__choice__": "none", "one_hot_encoding:minimum_fraction": 0.020938011807420828, "classifier:extra_trees:max_depth": "None", "classifier:extra_trees:bootstrap": "False", "balancing:strategy": "none", "classifier:extra_trees:min_samples_split": 19, "classifier:extra_trees:criterion": "entropy", "preprocessor:feature_agglomeration:pooling_func": "mean", "imputation:strategy": "mean", "preprocessor:feature_agglomeration:n_clusters": 260, "classifier:extra_trees:min_samples_leaf": 17, "one_hot_encoding:use_minimum_fraction": "True", "preprocessor:__choice__": "feature_agglomeration", "classifier:extra_trees:min_weight_fraction_leaf": 0.0, "preprocessor:feature_agglomeration:linkage": "complete", "classifier:__choice__": "extra_trees", "classifier:extra_trees:max_features": 3.40388658075532, "preprocessor:feature_agglomeration:affinity": "manhattan"}, "15": {"rescaling:__choice__": "none", "classifier:random_forest:n_estimators": 100, "preprocessor:__choice__": "no_preprocessing", "balancing:strategy": "none", "classifier:random_forest:bootstrap": "True", "one_hot_encoding:minimum_fraction": 0.010000000000000004, "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 1.0, "classifier:random_forest:min_samples_leaf": 1, "imputation:strategy": "mean", "classifier:random_forest:max_leaf_nodes": "None", "one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:criterion": "gini", "classifier:random_forest:min_samples_split": 2, "classifier:__choice__": "random_forest", "classifier:random_forest:min_weight_fraction_leaf": 0.0}}}